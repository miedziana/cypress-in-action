# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: DockerCompose@0
  displayName: Docker Compose Build
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose-pipeline.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
- task: DockerCompose@0
  displayName: Docker Compose Up
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose-pipeline.yml'
    dockerComposeFileArgs: |
      AUTH0_USERNAME=$(AUTH0_USERNAME)
      AUTH0_PASSWORD=$(AUTH0_PASSWORD)
      AUTH0_DOMAIN=$(AUTH0_DOMAIN)
      AUTH0_AUDIENCE=$(AUTH0_AUDIENCE)
      AUTH0_SCOPE=$(AUTH0_SCOPE)
      AUTH0_CLIENTID=$(AUTH0_CLIENTID)
      AUTH0_CLIENT_SECRET=$(AUTH0_CLIENT_SECRET)
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up'
    arguments: '--abort-on-container-exit --exit-code-from webapp'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Cypress Screenshot Files'
  inputs:
    PathtoPublish: client/cypress/screenshots/
    ArtifactName: screenshots
  condition: failed()
- task: PublishBuildArtifacts@1
  displayName: 'Publish Cypress Videos'
  inputs:
    PathtoPublish: client/cypress/videos/
    ArtifactName: videos
  condition: succeededOrFailed()
- task: PublishBuildArtifacts@1
  displayName: 'Publish Code Coverage'
  inputs:
    PathtoPublish: client/.nyc_output/
    ArtifactName: coverage-cypress
- task: PublishBuildArtifacts@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    PathtoPublish: client/coverage/
    ArtifactName: coverage-report
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/test-results*.xml'
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'client'
    customCommand: 'run copy:reports'
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'client'
    customCommand: 'run combine:reports'
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'client'
    customCommand: 'run coverage-report'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    PathtoPublish: client/reports/
    ArtifactName: reports
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/client/reports/cobertura-coverage.xml'
